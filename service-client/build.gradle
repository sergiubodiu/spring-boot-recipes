buildscript {
	ext {
		springBootVersion = '2.0.2.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.17.2")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'

group = 'org.springframework.cloud'
archivesBaseName = 'bookstore-service-broker-webmvc'
version = '0.0.1.BUILD-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.hateoas:spring-hateoas:0.24.0.RELEASE')

	runtime('org.springframework.boot:spring-boot-devtools')

	compile('org.springframework.cloud:spring-cloud-starter-open-service-broker-webmvc:2.0.0.RC1')

	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	runtime('org.hsqldb:hsqldb')
	runtime('mysql:mysql-connector-java')

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
	testCompile('org.assertj:assertj-core')
}

if (!project.hasProperty("dockerGroup")) {
	ext.dockerGroup = "sample"
}

docker {
	name "${dockerGroup}/bookstore-service-broker:${version}"
	dockerfile file('../deploy/docker/Dockerfile')
	files jar.archivePath
	buildArgs(['JAR_FILE': "${jar.archiveName}"])
}
